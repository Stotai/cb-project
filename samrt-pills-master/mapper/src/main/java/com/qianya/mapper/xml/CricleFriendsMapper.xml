<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianya.mapper.CricleFriendsMapper">
  <resultMap id="BaseResultMap" type="com.qianya.entity.CricleFriends">
    <id column="circle_id" jdbcType="INTEGER" property="circleId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="exrise_wx_ids" jdbcType="VARCHAR" property="exriseWxIds" />
    <result column="circle_name" jdbcType="VARCHAR" property="circleName" />
    <result column="send_time" jdbcType="VARCHAR" property="sendTime" />
    <result column="send_type" jdbcType="INTEGER" property="sendType" />
    <result column="send_num" jdbcType="INTEGER" property="sendNum" />
    <result column="unit_num" jdbcType="INTEGER" property="unitNum" />
    <result column="unit" jdbcType="INTEGER" property="unit" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="execute_times" jdbcType="INTEGER" property="executeTimes" />
    <result column="last_execust_time" jdbcType="VARCHAR" property="lastExecustTime" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="cricle_type" jdbcType="INTEGER" property="cricleType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    circle_id, user_id, exrise_wx_ids, circle_name, send_time, send_type, send_num, unit_num, 
    unit, status, execute_times, last_execust_time, create_time, content, cricle_type
  </sql>
  <select id="selectByExample" parameterType="com.qianya.entity.CricleFriendsCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cricle_friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cricle_friends
    where circle_id = #{circleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cricle_friends
    where circle_id = #{circleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianya.entity.CricleFriendsCriteria">
    delete from cricle_friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianya.entity.CricleFriends">
    insert into cricle_friends (circle_id, user_id, exrise_wx_ids, 
      circle_name, send_time, send_type, 
      send_num, unit_num, unit, 
      status, execute_times, last_execust_time, 
      create_time, content, cricle_type
      )
    values (#{circleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{exriseWxIds,jdbcType=VARCHAR}, 
      #{circleName,jdbcType=VARCHAR}, #{sendTime,jdbcType=VARCHAR}, #{sendType,jdbcType=INTEGER}, 
      #{sendNum,jdbcType=INTEGER}, #{unitNum,jdbcType=INTEGER}, #{unit,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{executeTimes,jdbcType=INTEGER}, #{lastExecustTime,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{cricleType,jdbcType=INTEGER}
      )
    <selectKey keyProperty="circleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.qianya.entity.CricleFriends">
    insert into cricle_friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="circleId != null">
        circle_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="exriseWxIds != null">
        exrise_wx_ids,
      </if>
      <if test="circleName != null">
        circle_name,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="sendType != null">
        send_type,
      </if>
      <if test="sendNum != null">
        send_num,
      </if>
      <if test="unitNum != null">
        unit_num,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="executeTimes != null">
        execute_times,
      </if>
      <if test="lastExecustTime != null">
        last_execust_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="cricleType != null">
        cricle_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="circleId != null">
        #{circleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="exriseWxIds != null">
        #{exriseWxIds,jdbcType=VARCHAR},
      </if>
      <if test="circleName != null">
        #{circleName,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="sendType != null">
        #{sendType,jdbcType=INTEGER},
      </if>
      <if test="sendNum != null">
        #{sendNum,jdbcType=INTEGER},
      </if>
      <if test="unitNum != null">
        #{unitNum,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="executeTimes != null">
        #{executeTimes,jdbcType=INTEGER},
      </if>
      <if test="lastExecustTime != null">
        #{lastExecustTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="cricleType != null">
        #{cricleType,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey keyProperty="circleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.qianya.entity.CricleFriendsCriteria" resultType="java.lang.Long">
    select count(*) from cricle_friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cricle_friends
    <set>
      <if test="record.circleId != null">
        circle_id = #{record.circleId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.exriseWxIds != null">
        exrise_wx_ids = #{record.exriseWxIds,jdbcType=VARCHAR},
      </if>
      <if test="record.circleName != null">
        circle_name = #{record.circleName,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.sendType != null">
        send_type = #{record.sendType,jdbcType=INTEGER},
      </if>
      <if test="record.sendNum != null">
        send_num = #{record.sendNum,jdbcType=INTEGER},
      </if>
      <if test="record.unitNum != null">
        unit_num = #{record.unitNum,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.executeTimes != null">
        execute_times = #{record.executeTimes,jdbcType=INTEGER},
      </if>
      <if test="record.lastExecustTime != null">
        last_execust_time = #{record.lastExecustTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.cricleType != null">
        cricle_type = #{record.cricleType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cricle_friends
    set circle_id = #{record.circleId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      exrise_wx_ids = #{record.exriseWxIds,jdbcType=VARCHAR},
      circle_name = #{record.circleName,jdbcType=VARCHAR},
      send_time = #{record.sendTime,jdbcType=VARCHAR},
      send_type = #{record.sendType,jdbcType=INTEGER},
      send_num = #{record.sendNum,jdbcType=INTEGER},
      unit_num = #{record.unitNum,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      execute_times = #{record.executeTimes,jdbcType=INTEGER},
      last_execust_time = #{record.lastExecustTime,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      cricle_type = #{record.cricleType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianya.entity.CricleFriends">
    update cricle_friends
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="exriseWxIds != null">
        exrise_wx_ids = #{exriseWxIds,jdbcType=VARCHAR},
      </if>
      <if test="circleName != null">
        circle_name = #{circleName,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=VARCHAR},
      </if>
      <if test="sendType != null">
        send_type = #{sendType,jdbcType=INTEGER},
      </if>
      <if test="sendNum != null">
        send_num = #{sendNum,jdbcType=INTEGER},
      </if>
      <if test="unitNum != null">
        unit_num = #{unitNum,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="executeTimes != null">
        execute_times = #{executeTimes,jdbcType=INTEGER},
      </if>
      <if test="lastExecustTime != null">
        last_execust_time = #{lastExecustTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="cricleType != null">
        cricle_type = #{cricleType,jdbcType=INTEGER},
      </if>
    </set>
    where circle_id = #{circleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianya.entity.CricleFriends">
    update cricle_friends
    set user_id = #{userId,jdbcType=INTEGER},
      exrise_wx_ids = #{exriseWxIds,jdbcType=VARCHAR},
      circle_name = #{circleName,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=VARCHAR},
      send_type = #{sendType,jdbcType=INTEGER},
      send_num = #{sendNum,jdbcType=INTEGER},
      unit_num = #{unitNum,jdbcType=INTEGER},
      unit = #{unit,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      execute_times = #{executeTimes,jdbcType=INTEGER},
      last_execust_time = #{lastExecustTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      cricle_type = #{cricleType,jdbcType=INTEGER}
    where circle_id = #{circleId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch">
    insert into cricle_friends ( 
    circle_id,
    user_id,
    exrise_wx_ids,
    circle_name,
    send_time,
    send_type,
    send_num,
    unit_num,
    unit,
    status,
    execute_times,
    last_execust_time,
    create_time,
    content,
    cricle_type
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
         #{record.circleId,jdbcType=INTEGER}, 
         #{record.userId,jdbcType=INTEGER}, 
         #{record.exriseWxIds,jdbcType=VARCHAR}, 
         #{record.circleName,jdbcType=VARCHAR}, 
         #{record.sendTime,jdbcType=VARCHAR}, 
         #{record.sendType,jdbcType=INTEGER}, 
         #{record.sendNum,jdbcType=INTEGER}, 
         #{record.unitNum,jdbcType=INTEGER}, 
         #{record.unit,jdbcType=INTEGER}, 
         #{record.status,jdbcType=INTEGER}, 
         #{record.executeTimes,jdbcType=INTEGER}, 
         #{record.lastExecustTime,jdbcType=VARCHAR}, 
         #{record.createTime,jdbcType=VARCHAR}, 
         #{record.content,jdbcType=VARCHAR}, 
         #{record.cricleType,jdbcType=INTEGER}, 
      </trim>
      )
    </foreach>
  </insert>
  <insert id="insertBatchSel">
    insert into cricle_friends ( 
    <trim suffixOverrides=",">
      <if test="recordColl[0].circleId != null">
        circle_id,
      </if>
      <if test="recordColl[0].userId != null">
        user_id,
      </if>
      <if test="recordColl[0].exriseWxIds != null">
        exrise_wx_ids,
      </if>
      <if test="recordColl[0].circleName != null">
        circle_name,
      </if>
      <if test="recordColl[0].sendTime != null">
        send_time,
      </if>
      <if test="recordColl[0].sendType != null">
        send_type,
      </if>
      <if test="recordColl[0].sendNum != null">
        send_num,
      </if>
      <if test="recordColl[0].unitNum != null">
        unit_num,
      </if>
      <if test="recordColl[0].unit != null">
        unit,
      </if>
      <if test="recordColl[0].status != null">
        status,
      </if>
      <if test="recordColl[0].executeTimes != null">
        execute_times,
      </if>
      <if test="recordColl[0].lastExecustTime != null">
        last_execust_time,
      </if>
      <if test="recordColl[0].createTime != null">
        create_time,
      </if>
      <if test="recordColl[0].content != null">
        content,
      </if>
      <if test="recordColl[0].cricleType != null">
        cricle_type,
      </if>
    </trim>
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
        <if test="record.circleId != null">
           #{record.circleId,jdbcType=INTEGER}, 
        </if>
        <if test="record.userId != null">
           #{record.userId,jdbcType=INTEGER}, 
        </if>
        <if test="record.exriseWxIds != null">
           #{record.exriseWxIds,jdbcType=VARCHAR}, 
        </if>
        <if test="record.circleName != null">
           #{record.circleName,jdbcType=VARCHAR}, 
        </if>
        <if test="record.sendTime != null">
           #{record.sendTime,jdbcType=VARCHAR}, 
        </if>
        <if test="record.sendType != null">
           #{record.sendType,jdbcType=INTEGER}, 
        </if>
        <if test="record.sendNum != null">
           #{record.sendNum,jdbcType=INTEGER}, 
        </if>
        <if test="record.unitNum != null">
           #{record.unitNum,jdbcType=INTEGER}, 
        </if>
        <if test="record.unit != null">
           #{record.unit,jdbcType=INTEGER}, 
        </if>
        <if test="record.status != null">
           #{record.status,jdbcType=INTEGER}, 
        </if>
        <if test="record.executeTimes != null">
           #{record.executeTimes,jdbcType=INTEGER}, 
        </if>
        <if test="record.lastExecustTime != null">
           #{record.lastExecustTime,jdbcType=VARCHAR}, 
        </if>
        <if test="record.createTime != null">
           #{record.createTime,jdbcType=VARCHAR}, 
        </if>
        <if test="record.content != null">
           #{record.content,jdbcType=VARCHAR}, 
        </if>
        <if test="record.cricleType != null">
           #{record.cricleType,jdbcType=INTEGER}, 
        </if>
      </trim>
      )
    </foreach>
  </insert>
  <select id="selectByExampleForOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cricle_friends
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>