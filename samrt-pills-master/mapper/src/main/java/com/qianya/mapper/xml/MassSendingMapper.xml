<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianya.mapper.MassSendingMapper">
  <resultMap id="BaseResultMap" type="com.qianya.entity.MassSending">
    <id column="mass_id" jdbcType="INTEGER" property="massId" />
    <result column="mass_name" jdbcType="VARCHAR" property="massName" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="exexrise_user_id" jdbcType="VARCHAR" property="exexriseUserId" />
    <result column="mass_common_type" jdbcType="INTEGER" property="massCommonType" />
    <result column="send_type" jdbcType="INTEGER" property="sendType" />
    <result column="unit_send_time" jdbcType="VARCHAR" property="unitSendTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="mass_content" jdbcType="VARCHAR" property="massContent" />
    <result column="mass_time" jdbcType="VARCHAR" property="massTime" />
    <result column="mass_type" jdbcType="INTEGER" property="massType" />
    <result column="mass_times" jdbcType="VARCHAR" property="massTimes" />
    <result column="mass_interval" jdbcType="INTEGER" property="massInterval" />
    <result column="interval_unit" jdbcType="INTEGER" property="intervalUnit" />
    <result column="customer_interval" jdbcType="VARCHAR" property="customerInterval" />
    <result column="stop_time_status" jdbcType="INTEGER" property="stopTimeStatus" />
    <result column="stop_time" jdbcType="VARCHAR" property="stopTime" />
    <result column="mass_batch_interval" jdbcType="VARCHAR" property="massBatchInterval" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="mass_num" jdbcType="INTEGER" property="massNum" />
    <result column="execute_times" jdbcType="INTEGER" property="executeTimes" />
    <result column="save_type" jdbcType="INTEGER" property="saveType" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mass_id, mass_name, user_id, exexrise_user_id, mass_common_type, send_type, unit_send_time, 
    status, mass_content, mass_time, mass_type, mass_times, mass_interval, interval_unit, 
    customer_interval, stop_time_status, stop_time, mass_batch_interval, is_del, mass_num, 
    execute_times, save_type, create_time
  </sql>
  <select id="selectByExample" parameterType="com.qianya.entity.MassSendingCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mass_sending
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mass_sending
    where mass_id = #{massId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mass_sending
    where mass_id = #{massId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianya.entity.MassSendingCriteria">
    delete from mass_sending
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianya.entity.MassSending">
    insert into mass_sending (mass_id, mass_name, user_id, 
      exexrise_user_id, mass_common_type, send_type, 
      unit_send_time, status, mass_content, 
      mass_time, mass_type, mass_times, 
      mass_interval, interval_unit, customer_interval, 
      stop_time_status, stop_time, mass_batch_interval, 
      is_del, mass_num, execute_times, 
      save_type, create_time)
    values (#{massId,jdbcType=INTEGER}, #{massName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{exexriseUserId,jdbcType=VARCHAR}, #{massCommonType,jdbcType=INTEGER}, #{sendType,jdbcType=INTEGER}, 
      #{unitSendTime,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{massContent,jdbcType=VARCHAR}, 
      #{massTime,jdbcType=VARCHAR}, #{massType,jdbcType=INTEGER}, #{massTimes,jdbcType=VARCHAR}, 
      #{massInterval,jdbcType=INTEGER}, #{intervalUnit,jdbcType=INTEGER}, #{customerInterval,jdbcType=VARCHAR}, 
      #{stopTimeStatus,jdbcType=INTEGER}, #{stopTime,jdbcType=VARCHAR}, #{massBatchInterval,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=INTEGER}, #{massNum,jdbcType=INTEGER}, #{executeTimes,jdbcType=INTEGER}, 
      #{saveType,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR})
    <selectKey keyProperty="massId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.qianya.entity.MassSending">
    insert into mass_sending
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="massId != null">
        mass_id,
      </if>
      <if test="massName != null">
        mass_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="exexriseUserId != null">
        exexrise_user_id,
      </if>
      <if test="massCommonType != null">
        mass_common_type,
      </if>
      <if test="sendType != null">
        send_type,
      </if>
      <if test="unitSendTime != null">
        unit_send_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="massContent != null">
        mass_content,
      </if>
      <if test="massTime != null">
        mass_time,
      </if>
      <if test="massType != null">
        mass_type,
      </if>
      <if test="massTimes != null">
        mass_times,
      </if>
      <if test="massInterval != null">
        mass_interval,
      </if>
      <if test="intervalUnit != null">
        interval_unit,
      </if>
      <if test="customerInterval != null">
        customer_interval,
      </if>
      <if test="stopTimeStatus != null">
        stop_time_status,
      </if>
      <if test="stopTime != null">
        stop_time,
      </if>
      <if test="massBatchInterval != null">
        mass_batch_interval,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="massNum != null">
        mass_num,
      </if>
      <if test="executeTimes != null">
        execute_times,
      </if>
      <if test="saveType != null">
        save_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="massId != null">
        #{massId,jdbcType=INTEGER},
      </if>
      <if test="massName != null">
        #{massName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="exexriseUserId != null">
        #{exexriseUserId,jdbcType=VARCHAR},
      </if>
      <if test="massCommonType != null">
        #{massCommonType,jdbcType=INTEGER},
      </if>
      <if test="sendType != null">
        #{sendType,jdbcType=INTEGER},
      </if>
      <if test="unitSendTime != null">
        #{unitSendTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="massContent != null">
        #{massContent,jdbcType=VARCHAR},
      </if>
      <if test="massTime != null">
        #{massTime,jdbcType=VARCHAR},
      </if>
      <if test="massType != null">
        #{massType,jdbcType=INTEGER},
      </if>
      <if test="massTimes != null">
        #{massTimes,jdbcType=VARCHAR},
      </if>
      <if test="massInterval != null">
        #{massInterval,jdbcType=INTEGER},
      </if>
      <if test="intervalUnit != null">
        #{intervalUnit,jdbcType=INTEGER},
      </if>
      <if test="customerInterval != null">
        #{customerInterval,jdbcType=VARCHAR},
      </if>
      <if test="stopTimeStatus != null">
        #{stopTimeStatus,jdbcType=INTEGER},
      </if>
      <if test="stopTime != null">
        #{stopTime,jdbcType=VARCHAR},
      </if>
      <if test="massBatchInterval != null">
        #{massBatchInterval,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="massNum != null">
        #{massNum,jdbcType=INTEGER},
      </if>
      <if test="executeTimes != null">
        #{executeTimes,jdbcType=INTEGER},
      </if>
      <if test="saveType != null">
        #{saveType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey keyProperty="massId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.qianya.entity.MassSendingCriteria" resultType="java.lang.Long">
    select count(*) from mass_sending
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mass_sending
    <set>
      <if test="record.massId != null">
        mass_id = #{record.massId,jdbcType=INTEGER},
      </if>
      <if test="record.massName != null">
        mass_name = #{record.massName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.exexriseUserId != null">
        exexrise_user_id = #{record.exexriseUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.massCommonType != null">
        mass_common_type = #{record.massCommonType,jdbcType=INTEGER},
      </if>
      <if test="record.sendType != null">
        send_type = #{record.sendType,jdbcType=INTEGER},
      </if>
      <if test="record.unitSendTime != null">
        unit_send_time = #{record.unitSendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.massContent != null">
        mass_content = #{record.massContent,jdbcType=VARCHAR},
      </if>
      <if test="record.massTime != null">
        mass_time = #{record.massTime,jdbcType=VARCHAR},
      </if>
      <if test="record.massType != null">
        mass_type = #{record.massType,jdbcType=INTEGER},
      </if>
      <if test="record.massTimes != null">
        mass_times = #{record.massTimes,jdbcType=VARCHAR},
      </if>
      <if test="record.massInterval != null">
        mass_interval = #{record.massInterval,jdbcType=INTEGER},
      </if>
      <if test="record.intervalUnit != null">
        interval_unit = #{record.intervalUnit,jdbcType=INTEGER},
      </if>
      <if test="record.customerInterval != null">
        customer_interval = #{record.customerInterval,jdbcType=VARCHAR},
      </if>
      <if test="record.stopTimeStatus != null">
        stop_time_status = #{record.stopTimeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.stopTime != null">
        stop_time = #{record.stopTime,jdbcType=VARCHAR},
      </if>
      <if test="record.massBatchInterval != null">
        mass_batch_interval = #{record.massBatchInterval,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.massNum != null">
        mass_num = #{record.massNum,jdbcType=INTEGER},
      </if>
      <if test="record.executeTimes != null">
        execute_times = #{record.executeTimes,jdbcType=INTEGER},
      </if>
      <if test="record.saveType != null">
        save_type = #{record.saveType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mass_sending
    set mass_id = #{record.massId,jdbcType=INTEGER},
      mass_name = #{record.massName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      exexrise_user_id = #{record.exexriseUserId,jdbcType=VARCHAR},
      mass_common_type = #{record.massCommonType,jdbcType=INTEGER},
      send_type = #{record.sendType,jdbcType=INTEGER},
      unit_send_time = #{record.unitSendTime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      mass_content = #{record.massContent,jdbcType=VARCHAR},
      mass_time = #{record.massTime,jdbcType=VARCHAR},
      mass_type = #{record.massType,jdbcType=INTEGER},
      mass_times = #{record.massTimes,jdbcType=VARCHAR},
      mass_interval = #{record.massInterval,jdbcType=INTEGER},
      interval_unit = #{record.intervalUnit,jdbcType=INTEGER},
      customer_interval = #{record.customerInterval,jdbcType=VARCHAR},
      stop_time_status = #{record.stopTimeStatus,jdbcType=INTEGER},
      stop_time = #{record.stopTime,jdbcType=VARCHAR},
      mass_batch_interval = #{record.massBatchInterval,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      mass_num = #{record.massNum,jdbcType=INTEGER},
      execute_times = #{record.executeTimes,jdbcType=INTEGER},
      save_type = #{record.saveType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianya.entity.MassSending">
    update mass_sending
    <set>
      <if test="massName != null">
        mass_name = #{massName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="exexriseUserId != null">
        exexrise_user_id = #{exexriseUserId,jdbcType=VARCHAR},
      </if>
      <if test="massCommonType != null">
        mass_common_type = #{massCommonType,jdbcType=INTEGER},
      </if>
      <if test="sendType != null">
        send_type = #{sendType,jdbcType=INTEGER},
      </if>
      <if test="unitSendTime != null">
        unit_send_time = #{unitSendTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="massContent != null">
        mass_content = #{massContent,jdbcType=VARCHAR},
      </if>
      <if test="massTime != null">
        mass_time = #{massTime,jdbcType=VARCHAR},
      </if>
      <if test="massType != null">
        mass_type = #{massType,jdbcType=INTEGER},
      </if>
      <if test="massTimes != null">
        mass_times = #{massTimes,jdbcType=VARCHAR},
      </if>
      <if test="massInterval != null">
        mass_interval = #{massInterval,jdbcType=INTEGER},
      </if>
      <if test="intervalUnit != null">
        interval_unit = #{intervalUnit,jdbcType=INTEGER},
      </if>
      <if test="customerInterval != null">
        customer_interval = #{customerInterval,jdbcType=VARCHAR},
      </if>
      <if test="stopTimeStatus != null">
        stop_time_status = #{stopTimeStatus,jdbcType=INTEGER},
      </if>
      <if test="stopTime != null">
        stop_time = #{stopTime,jdbcType=VARCHAR},
      </if>
      <if test="massBatchInterval != null">
        mass_batch_interval = #{massBatchInterval,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="massNum != null">
        mass_num = #{massNum,jdbcType=INTEGER},
      </if>
      <if test="executeTimes != null">
        execute_times = #{executeTimes,jdbcType=INTEGER},
      </if>
      <if test="saveType != null">
        save_type = #{saveType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where mass_id = #{massId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianya.entity.MassSending">
    update mass_sending
    set mass_name = #{massName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      exexrise_user_id = #{exexriseUserId,jdbcType=VARCHAR},
      mass_common_type = #{massCommonType,jdbcType=INTEGER},
      send_type = #{sendType,jdbcType=INTEGER},
      unit_send_time = #{unitSendTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      mass_content = #{massContent,jdbcType=VARCHAR},
      mass_time = #{massTime,jdbcType=VARCHAR},
      mass_type = #{massType,jdbcType=INTEGER},
      mass_times = #{massTimes,jdbcType=VARCHAR},
      mass_interval = #{massInterval,jdbcType=INTEGER},
      interval_unit = #{intervalUnit,jdbcType=INTEGER},
      customer_interval = #{customerInterval,jdbcType=VARCHAR},
      stop_time_status = #{stopTimeStatus,jdbcType=INTEGER},
      stop_time = #{stopTime,jdbcType=VARCHAR},
      mass_batch_interval = #{massBatchInterval,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      mass_num = #{massNum,jdbcType=INTEGER},
      execute_times = #{executeTimes,jdbcType=INTEGER},
      save_type = #{saveType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR}
    where mass_id = #{massId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch">
    insert into mass_sending ( 
    mass_id,
    mass_name,
    user_id,
    exexrise_user_id,
    mass_common_type,
    send_type,
    unit_send_time,
    status,
    mass_content,
    mass_time,
    mass_type,
    mass_times,
    mass_interval,
    interval_unit,
    customer_interval,
    stop_time_status,
    stop_time,
    mass_batch_interval,
    is_del,
    mass_num,
    execute_times,
    save_type,
    create_time
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
         #{record.massId,jdbcType=INTEGER}, 
         #{record.massName,jdbcType=VARCHAR}, 
         #{record.userId,jdbcType=INTEGER}, 
         #{record.exexriseUserId,jdbcType=VARCHAR}, 
         #{record.massCommonType,jdbcType=INTEGER}, 
         #{record.sendType,jdbcType=INTEGER}, 
         #{record.unitSendTime,jdbcType=VARCHAR}, 
         #{record.status,jdbcType=INTEGER}, 
         #{record.massContent,jdbcType=VARCHAR}, 
         #{record.massTime,jdbcType=VARCHAR}, 
         #{record.massType,jdbcType=INTEGER}, 
         #{record.massTimes,jdbcType=VARCHAR}, 
         #{record.massInterval,jdbcType=INTEGER}, 
         #{record.intervalUnit,jdbcType=INTEGER}, 
         #{record.customerInterval,jdbcType=VARCHAR}, 
         #{record.stopTimeStatus,jdbcType=INTEGER}, 
         #{record.stopTime,jdbcType=VARCHAR}, 
         #{record.massBatchInterval,jdbcType=VARCHAR}, 
         #{record.isDel,jdbcType=INTEGER}, 
         #{record.massNum,jdbcType=INTEGER}, 
         #{record.executeTimes,jdbcType=INTEGER}, 
         #{record.saveType,jdbcType=INTEGER}, 
         #{record.createTime,jdbcType=VARCHAR}, 
      </trim>
      )
    </foreach>
  </insert>
  <insert id="insertBatchSel">
    insert into mass_sending ( 
    <trim suffixOverrides=",">
      <if test="recordColl[0].massId != null">
        mass_id,
      </if>
      <if test="recordColl[0].massName != null">
        mass_name,
      </if>
      <if test="recordColl[0].userId != null">
        user_id,
      </if>
      <if test="recordColl[0].exexriseUserId != null">
        exexrise_user_id,
      </if>
      <if test="recordColl[0].massCommonType != null">
        mass_common_type,
      </if>
      <if test="recordColl[0].sendType != null">
        send_type,
      </if>
      <if test="recordColl[0].unitSendTime != null">
        unit_send_time,
      </if>
      <if test="recordColl[0].status != null">
        status,
      </if>
      <if test="recordColl[0].massContent != null">
        mass_content,
      </if>
      <if test="recordColl[0].massTime != null">
        mass_time,
      </if>
      <if test="recordColl[0].massType != null">
        mass_type,
      </if>
      <if test="recordColl[0].massTimes != null">
        mass_times,
      </if>
      <if test="recordColl[0].massInterval != null">
        mass_interval,
      </if>
      <if test="recordColl[0].intervalUnit != null">
        interval_unit,
      </if>
      <if test="recordColl[0].customerInterval != null">
        customer_interval,
      </if>
      <if test="recordColl[0].stopTimeStatus != null">
        stop_time_status,
      </if>
      <if test="recordColl[0].stopTime != null">
        stop_time,
      </if>
      <if test="recordColl[0].massBatchInterval != null">
        mass_batch_interval,
      </if>
      <if test="recordColl[0].isDel != null">
        is_del,
      </if>
      <if test="recordColl[0].massNum != null">
        mass_num,
      </if>
      <if test="recordColl[0].executeTimes != null">
        execute_times,
      </if>
      <if test="recordColl[0].saveType != null">
        save_type,
      </if>
      <if test="recordColl[0].createTime != null">
        create_time,
      </if>
    </trim>
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
        <if test="record.massId != null">
           #{record.massId,jdbcType=INTEGER}, 
        </if>
        <if test="record.massName != null">
           #{record.massName,jdbcType=VARCHAR}, 
        </if>
        <if test="record.userId != null">
           #{record.userId,jdbcType=INTEGER}, 
        </if>
        <if test="record.exexriseUserId != null">
           #{record.exexriseUserId,jdbcType=VARCHAR}, 
        </if>
        <if test="record.massCommonType != null">
           #{record.massCommonType,jdbcType=INTEGER}, 
        </if>
        <if test="record.sendType != null">
           #{record.sendType,jdbcType=INTEGER}, 
        </if>
        <if test="record.unitSendTime != null">
           #{record.unitSendTime,jdbcType=VARCHAR}, 
        </if>
        <if test="record.status != null">
           #{record.status,jdbcType=INTEGER}, 
        </if>
        <if test="record.massContent != null">
           #{record.massContent,jdbcType=VARCHAR}, 
        </if>
        <if test="record.massTime != null">
           #{record.massTime,jdbcType=VARCHAR}, 
        </if>
        <if test="record.massType != null">
           #{record.massType,jdbcType=INTEGER}, 
        </if>
        <if test="record.massTimes != null">
           #{record.massTimes,jdbcType=VARCHAR}, 
        </if>
        <if test="record.massInterval != null">
           #{record.massInterval,jdbcType=INTEGER}, 
        </if>
        <if test="record.intervalUnit != null">
           #{record.intervalUnit,jdbcType=INTEGER}, 
        </if>
        <if test="record.customerInterval != null">
           #{record.customerInterval,jdbcType=VARCHAR}, 
        </if>
        <if test="record.stopTimeStatus != null">
           #{record.stopTimeStatus,jdbcType=INTEGER}, 
        </if>
        <if test="record.stopTime != null">
           #{record.stopTime,jdbcType=VARCHAR}, 
        </if>
        <if test="record.massBatchInterval != null">
           #{record.massBatchInterval,jdbcType=VARCHAR}, 
        </if>
        <if test="record.isDel != null">
           #{record.isDel,jdbcType=INTEGER}, 
        </if>
        <if test="record.massNum != null">
           #{record.massNum,jdbcType=INTEGER}, 
        </if>
        <if test="record.executeTimes != null">
           #{record.executeTimes,jdbcType=INTEGER}, 
        </if>
        <if test="record.saveType != null">
           #{record.saveType,jdbcType=INTEGER}, 
        </if>
        <if test="record.createTime != null">
           #{record.createTime,jdbcType=VARCHAR}, 
        </if>
      </trim>
      )
    </foreach>
  </insert>
  <select id="selectByExampleForOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mass_sending
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>