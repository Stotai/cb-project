<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianya.mapper.ProductUseRecordMapper">
  <resultMap id="BaseResultMap" type="com.qianya.entity.ProductUseRecord">
    <id column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="carmi" jdbcType="VARCHAR" property="carmi" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="pay_user_phone" jdbcType="VARCHAR" property="payUserPhone" />
    <result column="pay_user_id" jdbcType="INTEGER" property="payUserId" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="exrise_wx_name" jdbcType="VARCHAR" property="exriseWxName" />
    <result column="exrise_user_id" jdbcType="VARCHAR" property="exriseUserId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_type" jdbcType="INTEGER" property="productType" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="use_time" jdbcType="VARCHAR" property="useTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    record_id, carmi, status, pay_user_phone, pay_user_id, user_phone, user_id, exrise_wx_name, 
    exrise_user_id, product_name, product_type, product_id, create_time, use_time
  </sql>
  <select id="selectByExample" parameterType="com.qianya.entity.ProductUseRecordCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_use_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_use_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_use_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianya.entity.ProductUseRecordCriteria">
    delete from product_use_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianya.entity.ProductUseRecord">
    insert into product_use_record (record_id, carmi, status, 
      pay_user_phone, pay_user_id, user_phone, 
      user_id, exrise_wx_name, exrise_user_id, 
      product_name, product_type, product_id, 
      create_time, use_time)
    values (#{recordId,jdbcType=INTEGER}, #{carmi,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{payUserPhone,jdbcType=VARCHAR}, #{payUserId,jdbcType=INTEGER}, #{userPhone,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{exriseWxName,jdbcType=VARCHAR}, #{exriseUserId,jdbcType=VARCHAR}, 
      #{productName,jdbcType=VARCHAR}, #{productType,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=VARCHAR}, #{useTime,jdbcType=VARCHAR})
    <selectKey keyProperty="recordId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.qianya.entity.ProductUseRecord">
    insert into product_use_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        record_id,
      </if>
      <if test="carmi != null">
        carmi,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="payUserPhone != null">
        pay_user_phone,
      </if>
      <if test="payUserId != null">
        pay_user_id,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="exriseWxName != null">
        exrise_wx_name,
      </if>
      <if test="exriseUserId != null">
        exrise_user_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productType != null">
        product_type,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="useTime != null">
        use_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="carmi != null">
        #{carmi,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payUserPhone != null">
        #{payUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="payUserId != null">
        #{payUserId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="exriseWxName != null">
        #{exriseWxName,jdbcType=VARCHAR},
      </if>
      <if test="exriseUserId != null">
        #{exriseUserId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productType != null">
        #{productType,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="useTime != null">
        #{useTime,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey keyProperty="recordId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.qianya.entity.ProductUseRecordCriteria" resultType="java.lang.Long">
    select count(*) from product_use_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_use_record
    <set>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.carmi != null">
        carmi = #{record.carmi,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.payUserPhone != null">
        pay_user_phone = #{record.payUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.payUserId != null">
        pay_user_id = #{record.payUserId,jdbcType=INTEGER},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.exriseWxName != null">
        exrise_wx_name = #{record.exriseWxName,jdbcType=VARCHAR},
      </if>
      <if test="record.exriseUserId != null">
        exrise_user_id = #{record.exriseUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productType != null">
        product_type = #{record.productType,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.useTime != null">
        use_time = #{record.useTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_use_record
    set record_id = #{record.recordId,jdbcType=INTEGER},
      carmi = #{record.carmi,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      pay_user_phone = #{record.payUserPhone,jdbcType=VARCHAR},
      pay_user_id = #{record.payUserId,jdbcType=INTEGER},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      exrise_wx_name = #{record.exriseWxName,jdbcType=VARCHAR},
      exrise_user_id = #{record.exriseUserId,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_type = #{record.productType,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      use_time = #{record.useTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianya.entity.ProductUseRecord">
    update product_use_record
    <set>
      <if test="carmi != null">
        carmi = #{carmi,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="payUserPhone != null">
        pay_user_phone = #{payUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="payUserId != null">
        pay_user_id = #{payUserId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="exriseWxName != null">
        exrise_wx_name = #{exriseWxName,jdbcType=VARCHAR},
      </if>
      <if test="exriseUserId != null">
        exrise_user_id = #{exriseUserId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productType != null">
        product_type = #{productType,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="useTime != null">
        use_time = #{useTime,jdbcType=VARCHAR},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianya.entity.ProductUseRecord">
    update product_use_record
    set carmi = #{carmi,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      pay_user_phone = #{payUserPhone,jdbcType=VARCHAR},
      pay_user_id = #{payUserId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      exrise_wx_name = #{exriseWxName,jdbcType=VARCHAR},
      exrise_user_id = #{exriseUserId,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_type = #{productType,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      use_time = #{useTime,jdbcType=VARCHAR}
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch">
    insert into product_use_record ( 
    record_id,
    carmi,
    status,
    pay_user_phone,
    pay_user_id,
    user_phone,
    user_id,
    exrise_wx_name,
    exrise_user_id,
    product_name,
    product_type,
    product_id,
    create_time,
    use_time
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
         #{record.recordId,jdbcType=INTEGER}, 
         #{record.carmi,jdbcType=VARCHAR}, 
         #{record.status,jdbcType=INTEGER}, 
         #{record.payUserPhone,jdbcType=VARCHAR}, 
         #{record.payUserId,jdbcType=INTEGER}, 
         #{record.userPhone,jdbcType=VARCHAR}, 
         #{record.userId,jdbcType=INTEGER}, 
         #{record.exriseWxName,jdbcType=VARCHAR}, 
         #{record.exriseUserId,jdbcType=VARCHAR}, 
         #{record.productName,jdbcType=VARCHAR}, 
         #{record.productType,jdbcType=INTEGER}, 
         #{record.productId,jdbcType=INTEGER}, 
         #{record.createTime,jdbcType=VARCHAR}, 
         #{record.useTime,jdbcType=VARCHAR}, 
      </trim>
      )
    </foreach>
  </insert>
  <insert id="insertBatchSel">
    insert into product_use_record ( 
    <trim suffixOverrides=",">
      <if test="recordColl[0].recordId != null">
        record_id,
      </if>
      <if test="recordColl[0].carmi != null">
        carmi,
      </if>
      <if test="recordColl[0].status != null">
        status,
      </if>
      <if test="recordColl[0].payUserPhone != null">
        pay_user_phone,
      </if>
      <if test="recordColl[0].payUserId != null">
        pay_user_id,
      </if>
      <if test="recordColl[0].userPhone != null">
        user_phone,
      </if>
      <if test="recordColl[0].userId != null">
        user_id,
      </if>
      <if test="recordColl[0].exriseWxName != null">
        exrise_wx_name,
      </if>
      <if test="recordColl[0].exriseUserId != null">
        exrise_user_id,
      </if>
      <if test="recordColl[0].productName != null">
        product_name,
      </if>
      <if test="recordColl[0].productType != null">
        product_type,
      </if>
      <if test="recordColl[0].productId != null">
        product_id,
      </if>
      <if test="recordColl[0].createTime != null">
        create_time,
      </if>
      <if test="recordColl[0].useTime != null">
        use_time,
      </if>
    </trim>
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
        <if test="record.recordId != null">
           #{record.recordId,jdbcType=INTEGER}, 
        </if>
        <if test="record.carmi != null">
           #{record.carmi,jdbcType=VARCHAR}, 
        </if>
        <if test="record.status != null">
           #{record.status,jdbcType=INTEGER}, 
        </if>
        <if test="record.payUserPhone != null">
           #{record.payUserPhone,jdbcType=VARCHAR}, 
        </if>
        <if test="record.payUserId != null">
           #{record.payUserId,jdbcType=INTEGER}, 
        </if>
        <if test="record.userPhone != null">
           #{record.userPhone,jdbcType=VARCHAR}, 
        </if>
        <if test="record.userId != null">
           #{record.userId,jdbcType=INTEGER}, 
        </if>
        <if test="record.exriseWxName != null">
           #{record.exriseWxName,jdbcType=VARCHAR}, 
        </if>
        <if test="record.exriseUserId != null">
           #{record.exriseUserId,jdbcType=VARCHAR}, 
        </if>
        <if test="record.productName != null">
           #{record.productName,jdbcType=VARCHAR}, 
        </if>
        <if test="record.productType != null">
           #{record.productType,jdbcType=INTEGER}, 
        </if>
        <if test="record.productId != null">
           #{record.productId,jdbcType=INTEGER}, 
        </if>
        <if test="record.createTime != null">
           #{record.createTime,jdbcType=VARCHAR}, 
        </if>
        <if test="record.useTime != null">
           #{record.useTime,jdbcType=VARCHAR}, 
        </if>
      </trim>
      )
    </foreach>
  </insert>
  <select id="selectByExampleForOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_use_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>