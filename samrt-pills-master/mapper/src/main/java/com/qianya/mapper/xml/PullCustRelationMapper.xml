<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianya.mapper.PullCustRelationMapper">
  <resultMap id="BaseResultMap" type="com.qianya.entity.PullCustRelation">
    <id column="pull_cust_id" jdbcType="INTEGER" property="pullCustId" />
    <result column="cust_wx_id" jdbcType="VARCHAR" property="custWxId" />
    <result column="pull_id" jdbcType="INTEGER" property="pullId" />
    <result column="fail_msg" jdbcType="VARCHAR" property="failMsg" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="send_time" jdbcType="VARCHAR" property="sendTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pull_cust_id, cust_wx_id, pull_id, fail_msg, status, send_time
  </sql>
  <select id="selectByExample" parameterType="com.qianya.entity.PullCustRelationCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pull_cust_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pull_cust_relation
    where pull_cust_id = #{pullCustId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pull_cust_relation
    where pull_cust_id = #{pullCustId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianya.entity.PullCustRelationCriteria">
    delete from pull_cust_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianya.entity.PullCustRelation">
    insert into pull_cust_relation (pull_cust_id, cust_wx_id, pull_id, 
      fail_msg, status, send_time
      )
    values (#{pullCustId,jdbcType=INTEGER}, #{custWxId,jdbcType=VARCHAR}, #{pullId,jdbcType=INTEGER}, 
      #{failMsg,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{sendTime,jdbcType=VARCHAR}
      )
    <selectKey keyProperty="pullCustId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.qianya.entity.PullCustRelation">
    insert into pull_cust_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pullCustId != null">
        pull_cust_id,
      </if>
      <if test="custWxId != null">
        cust_wx_id,
      </if>
      <if test="pullId != null">
        pull_id,
      </if>
      <if test="failMsg != null">
        fail_msg,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pullCustId != null">
        #{pullCustId,jdbcType=INTEGER},
      </if>
      <if test="custWxId != null">
        #{custWxId,jdbcType=VARCHAR},
      </if>
      <if test="pullId != null">
        #{pullId,jdbcType=INTEGER},
      </if>
      <if test="failMsg != null">
        #{failMsg,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey keyProperty="pullCustId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.qianya.entity.PullCustRelationCriteria" resultType="java.lang.Long">
    select count(*) from pull_cust_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pull_cust_relation
    <set>
      <if test="record.pullCustId != null">
        pull_cust_id = #{record.pullCustId,jdbcType=INTEGER},
      </if>
      <if test="record.custWxId != null">
        cust_wx_id = #{record.custWxId,jdbcType=VARCHAR},
      </if>
      <if test="record.pullId != null">
        pull_id = #{record.pullId,jdbcType=INTEGER},
      </if>
      <if test="record.failMsg != null">
        fail_msg = #{record.failMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pull_cust_relation
    set pull_cust_id = #{record.pullCustId,jdbcType=INTEGER},
      cust_wx_id = #{record.custWxId,jdbcType=VARCHAR},
      pull_id = #{record.pullId,jdbcType=INTEGER},
      fail_msg = #{record.failMsg,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      send_time = #{record.sendTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianya.entity.PullCustRelation">
    update pull_cust_relation
    <set>
      <if test="custWxId != null">
        cust_wx_id = #{custWxId,jdbcType=VARCHAR},
      </if>
      <if test="pullId != null">
        pull_id = #{pullId,jdbcType=INTEGER},
      </if>
      <if test="failMsg != null">
        fail_msg = #{failMsg,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=VARCHAR},
      </if>
    </set>
    where pull_cust_id = #{pullCustId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianya.entity.PullCustRelation">
    update pull_cust_relation
    set cust_wx_id = #{custWxId,jdbcType=VARCHAR},
      pull_id = #{pullId,jdbcType=INTEGER},
      fail_msg = #{failMsg,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      send_time = #{sendTime,jdbcType=VARCHAR}
    where pull_cust_id = #{pullCustId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch">
    insert into pull_cust_relation ( 
    pull_cust_id,
    cust_wx_id,
    pull_id,
    fail_msg,
    status,
    send_time
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
         #{record.pullCustId,jdbcType=INTEGER}, 
         #{record.custWxId,jdbcType=VARCHAR}, 
         #{record.pullId,jdbcType=INTEGER}, 
         #{record.failMsg,jdbcType=VARCHAR}, 
         #{record.status,jdbcType=INTEGER}, 
         #{record.sendTime,jdbcType=VARCHAR}, 
      </trim>
      )
    </foreach>
  </insert>
  <insert id="insertBatchSel">
    insert into pull_cust_relation ( 
    <trim suffixOverrides=",">
      <if test="recordColl[0].pullCustId != null">
        pull_cust_id,
      </if>
      <if test="recordColl[0].custWxId != null">
        cust_wx_id,
      </if>
      <if test="recordColl[0].pullId != null">
        pull_id,
      </if>
      <if test="recordColl[0].failMsg != null">
        fail_msg,
      </if>
      <if test="recordColl[0].status != null">
        status,
      </if>
      <if test="recordColl[0].sendTime != null">
        send_time,
      </if>
    </trim>
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
        <if test="record.pullCustId != null">
           #{record.pullCustId,jdbcType=INTEGER}, 
        </if>
        <if test="record.custWxId != null">
           #{record.custWxId,jdbcType=VARCHAR}, 
        </if>
        <if test="record.pullId != null">
           #{record.pullId,jdbcType=INTEGER}, 
        </if>
        <if test="record.failMsg != null">
           #{record.failMsg,jdbcType=VARCHAR}, 
        </if>
        <if test="record.status != null">
           #{record.status,jdbcType=INTEGER}, 
        </if>
        <if test="record.sendTime != null">
           #{record.sendTime,jdbcType=VARCHAR}, 
        </if>
      </trim>
      )
    </foreach>
  </insert>
  <select id="selectByExampleForOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pull_cust_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>