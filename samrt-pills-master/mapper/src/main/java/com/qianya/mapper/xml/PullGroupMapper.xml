<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianya.mapper.PullGroupMapper">
  <resultMap id="BaseResultMap" type="com.qianya.entity.PullGroup">
    <id column="pull_id" jdbcType="INTEGER" property="pullId" />
    <result column="pull_name" jdbcType="VARCHAR" property="pullName" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="exrise_wx_id" jdbcType="VARCHAR" property="exriseWxId" />
    <result column="exrise_wx_name" jdbcType="VARCHAR" property="exriseWxName" />
    <result column="max_num" jdbcType="INTEGER" property="maxNum" />
    <result column="day_max_num" jdbcType="INTEGER" property="dayMaxNum" />
    <result column="send_count" jdbcType="INTEGER" property="sendCount" />
    <result column="complete_count" jdbcType="INTEGER" property="completeCount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="complete_time" jdbcType="VARCHAR" property="completeTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pull_id, pull_name, user_id, exrise_wx_id, exrise_wx_name, max_num, day_max_num, 
    send_count, complete_count, status, create_time, complete_time
  </sql>
  <select id="selectByExample" parameterType="com.qianya.entity.PullGroupCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pull_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pull_group
    where pull_id = #{pullId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pull_group
    where pull_id = #{pullId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianya.entity.PullGroupCriteria">
    delete from pull_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianya.entity.PullGroup">
    insert into pull_group (pull_id, pull_name, user_id, 
      exrise_wx_id, exrise_wx_name, max_num, 
      day_max_num, send_count, complete_count, 
      status, create_time, complete_time
      )
    values (#{pullId,jdbcType=INTEGER}, #{pullName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{exriseWxId,jdbcType=VARCHAR}, #{exriseWxName,jdbcType=VARCHAR}, #{maxNum,jdbcType=INTEGER}, 
      #{dayMaxNum,jdbcType=INTEGER}, #{sendCount,jdbcType=INTEGER}, #{completeCount,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, #{completeTime,jdbcType=VARCHAR}
      )
    <selectKey keyProperty="pullId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.qianya.entity.PullGroup">
    insert into pull_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pullId != null">
        pull_id,
      </if>
      <if test="pullName != null">
        pull_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="exriseWxId != null">
        exrise_wx_id,
      </if>
      <if test="exriseWxName != null">
        exrise_wx_name,
      </if>
      <if test="maxNum != null">
        max_num,
      </if>
      <if test="dayMaxNum != null">
        day_max_num,
      </if>
      <if test="sendCount != null">
        send_count,
      </if>
      <if test="completeCount != null">
        complete_count,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="completeTime != null">
        complete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pullId != null">
        #{pullId,jdbcType=INTEGER},
      </if>
      <if test="pullName != null">
        #{pullName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="exriseWxId != null">
        #{exriseWxId,jdbcType=VARCHAR},
      </if>
      <if test="exriseWxName != null">
        #{exriseWxName,jdbcType=VARCHAR},
      </if>
      <if test="maxNum != null">
        #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="dayMaxNum != null">
        #{dayMaxNum,jdbcType=INTEGER},
      </if>
      <if test="sendCount != null">
        #{sendCount,jdbcType=INTEGER},
      </if>
      <if test="completeCount != null">
        #{completeCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null">
        #{completeTime,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey keyProperty="pullId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.qianya.entity.PullGroupCriteria" resultType="java.lang.Long">
    select count(*) from pull_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pull_group
    <set>
      <if test="record.pullId != null">
        pull_id = #{record.pullId,jdbcType=INTEGER},
      </if>
      <if test="record.pullName != null">
        pull_name = #{record.pullName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.exriseWxId != null">
        exrise_wx_id = #{record.exriseWxId,jdbcType=VARCHAR},
      </if>
      <if test="record.exriseWxName != null">
        exrise_wx_name = #{record.exriseWxName,jdbcType=VARCHAR},
      </if>
      <if test="record.maxNum != null">
        max_num = #{record.maxNum,jdbcType=INTEGER},
      </if>
      <if test="record.dayMaxNum != null">
        day_max_num = #{record.dayMaxNum,jdbcType=INTEGER},
      </if>
      <if test="record.sendCount != null">
        send_count = #{record.sendCount,jdbcType=INTEGER},
      </if>
      <if test="record.completeCount != null">
        complete_count = #{record.completeCount,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.completeTime != null">
        complete_time = #{record.completeTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pull_group
    set pull_id = #{record.pullId,jdbcType=INTEGER},
      pull_name = #{record.pullName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      exrise_wx_id = #{record.exriseWxId,jdbcType=VARCHAR},
      exrise_wx_name = #{record.exriseWxName,jdbcType=VARCHAR},
      max_num = #{record.maxNum,jdbcType=INTEGER},
      day_max_num = #{record.dayMaxNum,jdbcType=INTEGER},
      send_count = #{record.sendCount,jdbcType=INTEGER},
      complete_count = #{record.completeCount,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      complete_time = #{record.completeTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianya.entity.PullGroup">
    update pull_group
    <set>
      <if test="pullName != null">
        pull_name = #{pullName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="exriseWxId != null">
        exrise_wx_id = #{exriseWxId,jdbcType=VARCHAR},
      </if>
      <if test="exriseWxName != null">
        exrise_wx_name = #{exriseWxName,jdbcType=VARCHAR},
      </if>
      <if test="maxNum != null">
        max_num = #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="dayMaxNum != null">
        day_max_num = #{dayMaxNum,jdbcType=INTEGER},
      </if>
      <if test="sendCount != null">
        send_count = #{sendCount,jdbcType=INTEGER},
      </if>
      <if test="completeCount != null">
        complete_count = #{completeCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null">
        complete_time = #{completeTime,jdbcType=VARCHAR},
      </if>
    </set>
    where pull_id = #{pullId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianya.entity.PullGroup">
    update pull_group
    set pull_name = #{pullName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      exrise_wx_id = #{exriseWxId,jdbcType=VARCHAR},
      exrise_wx_name = #{exriseWxName,jdbcType=VARCHAR},
      max_num = #{maxNum,jdbcType=INTEGER},
      day_max_num = #{dayMaxNum,jdbcType=INTEGER},
      send_count = #{sendCount,jdbcType=INTEGER},
      complete_count = #{completeCount,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      complete_time = #{completeTime,jdbcType=VARCHAR}
    where pull_id = #{pullId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch">
    insert into pull_group ( 
    pull_id,
    pull_name,
    user_id,
    exrise_wx_id,
    exrise_wx_name,
    max_num,
    day_max_num,
    send_count,
    complete_count,
    status,
    create_time,
    complete_time
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
         #{record.pullId,jdbcType=INTEGER}, 
         #{record.pullName,jdbcType=VARCHAR}, 
         #{record.userId,jdbcType=INTEGER}, 
         #{record.exriseWxId,jdbcType=VARCHAR}, 
         #{record.exriseWxName,jdbcType=VARCHAR}, 
         #{record.maxNum,jdbcType=INTEGER}, 
         #{record.dayMaxNum,jdbcType=INTEGER}, 
         #{record.sendCount,jdbcType=INTEGER}, 
         #{record.completeCount,jdbcType=INTEGER}, 
         #{record.status,jdbcType=INTEGER}, 
         #{record.createTime,jdbcType=VARCHAR}, 
         #{record.completeTime,jdbcType=VARCHAR}, 
      </trim>
      )
    </foreach>
  </insert>
  <insert id="insertBatchSel">
    insert into pull_group ( 
    <trim suffixOverrides=",">
      <if test="recordColl[0].pullId != null">
        pull_id,
      </if>
      <if test="recordColl[0].pullName != null">
        pull_name,
      </if>
      <if test="recordColl[0].userId != null">
        user_id,
      </if>
      <if test="recordColl[0].exriseWxId != null">
        exrise_wx_id,
      </if>
      <if test="recordColl[0].exriseWxName != null">
        exrise_wx_name,
      </if>
      <if test="recordColl[0].maxNum != null">
        max_num,
      </if>
      <if test="recordColl[0].dayMaxNum != null">
        day_max_num,
      </if>
      <if test="recordColl[0].sendCount != null">
        send_count,
      </if>
      <if test="recordColl[0].completeCount != null">
        complete_count,
      </if>
      <if test="recordColl[0].status != null">
        status,
      </if>
      <if test="recordColl[0].createTime != null">
        create_time,
      </if>
      <if test="recordColl[0].completeTime != null">
        complete_time,
      </if>
    </trim>
     ) values 
    <foreach collection="recordColl" item="record" separator=",">
      (
      <trim suffixOverrides=",">
        <if test="record.pullId != null">
           #{record.pullId,jdbcType=INTEGER}, 
        </if>
        <if test="record.pullName != null">
           #{record.pullName,jdbcType=VARCHAR}, 
        </if>
        <if test="record.userId != null">
           #{record.userId,jdbcType=INTEGER}, 
        </if>
        <if test="record.exriseWxId != null">
           #{record.exriseWxId,jdbcType=VARCHAR}, 
        </if>
        <if test="record.exriseWxName != null">
           #{record.exriseWxName,jdbcType=VARCHAR}, 
        </if>
        <if test="record.maxNum != null">
           #{record.maxNum,jdbcType=INTEGER}, 
        </if>
        <if test="record.dayMaxNum != null">
           #{record.dayMaxNum,jdbcType=INTEGER}, 
        </if>
        <if test="record.sendCount != null">
           #{record.sendCount,jdbcType=INTEGER}, 
        </if>
        <if test="record.completeCount != null">
           #{record.completeCount,jdbcType=INTEGER}, 
        </if>
        <if test="record.status != null">
           #{record.status,jdbcType=INTEGER}, 
        </if>
        <if test="record.createTime != null">
           #{record.createTime,jdbcType=VARCHAR}, 
        </if>
        <if test="record.completeTime != null">
           #{record.completeTime,jdbcType=VARCHAR}, 
        </if>
      </trim>
      )
    </foreach>
  </insert>
  <select id="selectByExampleForOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pull_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>